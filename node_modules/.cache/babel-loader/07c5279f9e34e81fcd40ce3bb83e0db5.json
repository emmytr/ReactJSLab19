{"ast":null,"code":"var _jsxFileName = \"/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/pages/MovieDetail/MovieList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport styles from './movieList.module.css'; // Import the CSS file\n\nfunction MovieList({\n  category,\n  fetchUrl,\n  isOriginals,\n  onClick,\n  movies = []\n}) {\n  const [fetchedMovies, setFetchedMovies] = useState([]);\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  useEffect(() => {\n    if (fetchUrl) {\n      async function fetchData() {\n        const response = await fetch(fetchUrl);\n        const data = await response.json();\n        setFetchedMovies(data.results);\n      }\n      fetchData();\n    }\n  }, [fetchUrl]);\n\n  // Use either the provided `movies` prop or the fetched movies\n  const moviesToDisplay = movies.length > 0 ? movies : fetchedMovies;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, category), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.movieContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, moviesToDisplay.map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    key: movie.id,\n    className: `${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`,\n    onClick: () => onClick(movie) // Pass the movie click event to parent\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.title,\n    className: styles.movieImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })))));\n}\nexport default MovieList;","map":{"version":3,"names":["React","useEffect","useState","styles","MovieList","category","fetchUrl","isOriginals","onClick","movies","fetchedMovies","setFetchedMovies","API_BASE_URL","fetchData","response","fetch","data","json","results","moviesToDisplay","length","createElement","className","group","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","movieContainer","map","movie","key","id","movieItem","netflixOriginals","otherGenres","src","poster_path","backdrop_path","alt","title","movieImage"],"sources":["/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/pages/MovieDetail/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './movieList.module.css'; // Import the CSS file\n\nfunction MovieList({ category, fetchUrl, isOriginals, onClick, movies = [] }) {\n    const [fetchedMovies, setFetchedMovies] = useState([]);\n    const API_BASE_URL = 'https://api.themoviedb.org/3';\n\n\n    useEffect(() => {\n        if (fetchUrl) {\n            async function fetchData() {\n                const response = await fetch(fetchUrl);\n                const data = await response.json();\n                setFetchedMovies(data.results);\n            }\n            fetchData();\n        }\n    }, [fetchUrl]);\n\n    // Use either the provided `movies` prop or the fetched movies\n    const moviesToDisplay = movies.length > 0 ? movies : fetchedMovies;\n\n    return (\n        <div className={styles.group}>\n            <h2>{category}</h2>\n            <div className={styles.movieContainer}>\n                {moviesToDisplay.map((movie) => (\n                    <div\n                        key={movie.id}\n                        className={`${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`}\n                        onClick={() => onClick(movie)}  // Pass the movie click event to parent\n                    >\n                        {/* Conditional rendering: show poster for Netflix Originals, backdrop for other genres */}\n                        <img\n                            src={`https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`}\n                            alt={movie.title}\n                            className={styles.movieImage}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB,CAAC,CAAC;;AAE7C,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,OAAO;EAAEC,MAAM,GAAG;AAAG,CAAC,EAAE;EAC1E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMU,YAAY,GAAG,8BAA8B;EAGnDX,SAAS,CAAC,MAAM;IACZ,IAAIK,QAAQ,EAAE;MACV,eAAeO,SAASA,CAAA,EAAG;QACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,QAAQ,CAAC;QACtC,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCN,gBAAgB,CAACK,IAAI,CAACE,OAAO,CAAC;MAClC;MACAL,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMa,eAAe,GAAGV,MAAM,CAACW,MAAM,GAAG,CAAC,GAAGX,MAAM,GAAGC,aAAa;EAElE,oBACIV,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAEnB,MAAM,CAACoB,KAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB7B,KAAA,CAAAqB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKxB,QAAa,CAAC,eACnBL,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAEnB,MAAM,CAAC2B,cAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjCV,eAAe,CAACY,GAAG,CAAEC,KAAK,iBACvBhC,KAAA,CAAAqB,aAAA;IACIY,GAAG,EAAED,KAAK,CAACE,EAAG;IACdZ,SAAS,EAAE,GAAGnB,MAAM,CAACgC,SAAS,IAAI5B,WAAW,GAAGJ,MAAM,CAACiC,gBAAgB,GAAGjC,MAAM,CAACkC,WAAW,EAAG;IAC/F7B,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACwB,KAAK,CAAE,CAAE;IAAA;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGhC7B,KAAA,CAAAqB,aAAA;IACIiB,GAAG,EAAE,kCAAkC/B,WAAW,GAAGyB,KAAK,CAACO,WAAW,GAAGP,KAAK,CAACQ,aAAa,EAAG;IAC/FC,GAAG,EAAET,KAAK,CAACU,KAAM;IACjBpB,SAAS,EAAEnB,MAAM,CAACwC,UAAW;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChC,CACA,CACR,CACA,CACJ,CAAC;AAEd;AAEA,eAAezB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}