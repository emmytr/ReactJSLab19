{"ast":null,"code":"var _jsxFileName = \"/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/Movie.jsx\";\n// API Key\n// a090b75e1744dd94d481ba67ad26903e\n\n// API Read Access Token\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDkwYjc1ZTE3NDRkZDk0ZDQ4MWJhNjdhZDI2OTAzZSIsIm5iZiI6MTcyODMxNzQxNy40MDUxOTEsInN1YiI6IjY3MDQwNTk3M2FmYzkxYTVmMTEzYTM3NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZSwPF56KWx_fo1dbaMRBXZqrR-hFstpP4L2owhxKZng\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './movie.module.css'; // Import the CSS file\nimport MovieList from './pages/MovieDetail/MovieList';\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\n\n// function MovieList({ category, fetchUrl, isOriginals }) {\n//   const [movies, setMovies] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n//       const data = await response.json();\n//       setMovies(data.results);\n//     }\n\n//     fetchData();\n//   }, [fetchUrl]);\n\n//   return (\n//     <div className={styles.group}>\n//       <h2>{category}</h2>\n//       <div className={styles.movieContainer}>\n//         {movies.map((movie) => (\n//           <div\n//             key={movie.id}\n//             className={`${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`}\n//           >\n//             {/* Conditional rendering: show poster for Netflix Originals, backdrop for other genres */}\n//             <img\n//               src={`https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`}\n//               alt={movie.title || movie.name}\n//               className={styles.movieImage}\n//             />\n\n//           </div>\n//         ))}\n//       </div>\n//     </div >\n//   );\n// }\n\nfunction Movie() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    category: \"\",\n    fetchUrl: requests.fetchNetflixOriginals,\n    isOriginals: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Xu h\\u01B0\\u1EDBng\",\n    fetchUrl: requests.fetchTrending,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"X\\u1EBFp h\\u1EA1ng cao\",\n    fetchUrl: requests.fetchTopRated,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"H\\xE0nh \\u0111\\u1ED9ng\",\n    fetchUrl: requests.fetchActionMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"H\\xE0i\",\n    fetchUrl: requests.fetchComedyMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Kinh d\\u1ECB\",\n    fetchUrl: requests.fetchHorrorMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"L\\xE3ng m\\u1EA1n\",\n    fetchUrl: requests.fetchRomanceMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"T\\xE0i li\\u1EC7u\",\n    fetchUrl: requests.fetchDocumentaries,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Movie;","map":{"version":3,"names":["React","useState","useEffect","styles","MovieList","API_BASE_URL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","Movie","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","category","fetchUrl","isOriginals"],"sources":["/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/Movie.jsx"],"sourcesContent":["// API Key\n// a090b75e1744dd94d481ba67ad26903e\n\n// API Read Access Token\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDkwYjc1ZTE3NDRkZDk0ZDQ4MWJhNjdhZDI2OTAzZSIsIm5iZiI6MTcyODMxNzQxNy40MDUxOTEsInN1YiI6IjY3MDQwNTk3M2FmYzkxYTVmMTEzYTM3NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZSwPF56KWx_fo1dbaMRBXZqrR-hFstpP4L2owhxKZng\n\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './movie.module.css';  // Import the CSS file\nimport MovieList from './pages/MovieDetail/MovieList';\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n};\n\n// function MovieList({ category, fetchUrl, isOriginals }) {\n//   const [movies, setMovies] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n//       const data = await response.json();\n//       setMovies(data.results);\n//     }\n\n//     fetchData();\n//   }, [fetchUrl]);\n\n//   return (\n//     <div className={styles.group}>\n//       <h2>{category}</h2>\n//       <div className={styles.movieContainer}>\n//         {movies.map((movie) => (\n//           <div\n//             key={movie.id}\n//             className={`${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`}\n//           >\n//             {/* Conditional rendering: show poster for Netflix Originals, backdrop for other genres */}\n//             <img\n//               src={`https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`}\n//               alt={movie.title || movie.name}\n//               className={styles.movieImage}\n//             />\n\n//           </div>\n//         ))}\n//       </div>\n//     </div >\n//   );\n// }\n\nfunction Movie() {\n  return (\n    <div>\n      <MovieList category=\"\" fetchUrl={requests.fetchNetflixOriginals} isOriginals={true} />\n      <MovieList category=\"Xu hướng\" fetchUrl={requests.fetchTrending} isOriginals={false} />\n      <MovieList category=\"Xếp hạng cao\" fetchUrl={requests.fetchTopRated} isOriginals={false} />\n      <MovieList category=\"Hành động\" fetchUrl={requests.fetchActionMovies} isOriginals={false} />\n      <MovieList category=\"Hài\" fetchUrl={requests.fetchComedyMovies} isOriginals={false} />\n      <MovieList category=\"Kinh dị\" fetchUrl={requests.fetchHorrorMovies} isOriginals={false} />\n      <MovieList category=\"Lãng mạn\" fetchUrl={requests.fetchRomanceMovies} isOriginals={false} />\n      <MovieList category=\"Tài liệu\" fetchUrl={requests.fetchDocumentaries} isOriginals={false} />\n    </div>\n  );\n}\n\nexport default Movie;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}