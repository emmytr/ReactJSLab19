{"ast":null,"code":"var _jsxFileName = \"/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/Movie.jsx\";\nimport React, { useState } from 'react';\nimport styles from './movie.module.css'; // Import the CSS file\nimport MovieList from './pages/MovieDetail/MovieList';\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\nfunction Movie() {\n  const [selectedMovie, setSelectedMovie] = useState(null); // Track the selected movie\n  const [sameGenreMovies, setSameGenreMovies] = useState([]); // Movies in the same genre as the selected movie\n  const [isMovieSelected, setIsMovieSelected] = useState(false); // If a movie is selected\n\n  // Function to handle when a movie is clicked\n  const handleMovieClick = (movie, moviesFromSameUrl) => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      // Deselect the movie\n      setSelectedMovie(null);\n      setIsMovieSelected(false);\n    } else {\n      // Select the movie and filter same genre movies\n      setSelectedMovie(movie);\n      setIsMovieSelected(true);\n      setSameGenreMovies(moviesFromSameUrl);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, isMovieSelected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.sameGenreMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Movies in the Same Genre\"), /*#__PURE__*/React.createElement(MovieList, {\n    movies: sameGenreMovies,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), selectedMovie && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.movieDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, selectedMovie.title || selectedMovie.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }\n  }, \"Release Date:\"), \" \", selectedMovie.first_air_date || selectedMovie.first_air_date), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }\n  }, \"Rating:\"), \" \", selectedMovie.vote_average, \"/10\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }\n  }, \"Overview:\"), \" \", selectedMovie.overview))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MovieList, {\n    category: \"\",\n    fetchUrl: requests.fetchNetflixOriginals,\n    isOriginals: true,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Xu h\\u01B0\\u1EDBng\",\n    fetchUrl: requests.fetchTrending,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"X\\u1EBFp h\\u1EA1ng cao\",\n    fetchUrl: requests.fetchTopRated,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"H\\xE0nh \\u0111\\u1ED9ng\",\n    fetchUrl: requests.fetchActionMovies,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"H\\xE0i\",\n    fetchUrl: requests.fetchComedyMovies,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Kinh d\\u1ECB\",\n    fetchUrl: requests.fetchHorrorMovies,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"L\\xE3ng m\\u1EA1n\",\n    fetchUrl: requests.fetchRomanceMovies,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"T\\xE0i li\\u1EC7u\",\n    fetchUrl: requests.fetchDocumentaries,\n    isOriginals: false,\n    onClick: handleMovieClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })));\n}\nexport default Movie;","map":{"version":3,"names":["React","useState","styles","MovieList","API_BASE_URL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","Movie","selectedMovie","setSelectedMovie","sameGenreMovies","setSameGenreMovies","isMovieSelected","setIsMovieSelected","handleMovieClick","movie","moviesFromSameUrl","id","createElement","className","group","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","movies","onClick","movieDetails","title","name","first_air_date","vote_average","overview","category","fetchUrl","isOriginals"],"sources":["/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/Movie.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './movie.module.css';  // Import the CSS file\nimport MovieList from './pages/MovieDetail/MovieList';\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\n\n\nfunction Movie() {\n  const [selectedMovie, setSelectedMovie] = useState(null);   // Track the selected movie\n  const [sameGenreMovies, setSameGenreMovies] = useState([]); // Movies in the same genre as the selected movie\n  const [isMovieSelected, setIsMovieSelected] = useState(false); // If a movie is selected\n\n\n\n  // Function to handle when a movie is clicked\n  const handleMovieClick = (movie, moviesFromSameUrl) => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      // Deselect the movie\n      setSelectedMovie(null);\n      setIsMovieSelected(false);\n    } else {\n      // Select the movie and filter same genre movies\n      setSelectedMovie(movie);\n      setIsMovieSelected(true);\n      setSameGenreMovies(moviesFromSameUrl);\n    }\n  }\n\n  return (\n\n    <div className={styles.group}>\n      {isMovieSelected ? (\n        <>\n          {/* Display same genre movies and movie details */}\n          <div className={styles.sameGenreMovies}>\n            <h2>Movies in the Same Genre</h2>\n            <MovieList\n              movies={sameGenreMovies}\n              onClick={handleMovieClick}\n            />\n          </div>\n\n          {/* Display selected movie details */}\n          {selectedMovie && (\n            <div className={styles.movieDetails}>\n              <h2>{selectedMovie.title || selectedMovie.name}</h2>\n              <p><strong>Release Date:</strong> {selectedMovie.first_air_date || selectedMovie.first_air_date}</p>\n              <p><strong>Rating:</strong> {selectedMovie.vote_average}/10</p>\n              <p><strong>Overview:</strong> {selectedMovie.overview}</p>\n            </div>\n          )}\n        </>\n      ) : (\n        <>\n          {/* Render MovieLists for different categories */}\n          <MovieList category=\"\" fetchUrl={requests.fetchNetflixOriginals} isOriginals={true} onClick={handleMovieClick} />\n          <MovieList category=\"Xu hướng\" fetchUrl={requests.fetchTrending} isOriginals={false} onClick={handleMovieClick} />\n          <MovieList category=\"Xếp hạng cao\" fetchUrl={requests.fetchTopRated} isOriginals={false} onClick={handleMovieClick} />\n          <MovieList category=\"Hành động\" fetchUrl={requests.fetchActionMovies} isOriginals={false} onClick={handleMovieClick} />\n          <MovieList category=\"Hài\" fetchUrl={requests.fetchComedyMovies} isOriginals={false} onClick={handleMovieClick} />\n          <MovieList category=\"Kinh dị\" fetchUrl={requests.fetchHorrorMovies} isOriginals={false} onClick={handleMovieClick} />\n          <MovieList category=\"Lãng mạn\" fetchUrl={requests.fetchRomanceMovies} isOriginals={false} onClick={handleMovieClick} />\n          <MovieList category=\"Tài liệu\" fetchUrl={requests.fetchDocumentaries} isOriginals={false} onClick={handleMovieClick} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Movie;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}