{"ast":null,"code":"var _jsxFileName = \"/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/pages/MovieDetail/MovieList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport styles from './movieList.module.css'; // Import the CSS file\n\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\nfunction MovieList({\n  category,\n  fetchUrl,\n  isOriginals,\n  onClick\n}) {\n  const [movies, setMovies] = useState([]);\n\n  // Fetch movies based on the provided fetchUrl\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n      const data = await response.json();\n      setMovies(data.results);\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  // // Use either the provided `movies` prop or the fetched movies\n  // const moviesToDisplay = movies.length > 0 ? movies : fetchedMovies;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, category), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.movieContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    key: movie.id,\n    className: `${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`,\n    onClick: () => onClick(movie, movies) // Pass the movie click event to parent\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.title,\n    className: styles.movieImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })))));\n}\nexport default MovieList;","map":{"version":3,"names":["React","useEffect","useState","styles","API_BASE_URL","MovieList","category","fetchUrl","isOriginals","onClick","movies","setMovies","fetchData","response","fetch","data","json","results","createElement","className","group","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","movieContainer","map","movie","key","id","movieItem","netflixOriginals","otherGenres","src","poster_path","backdrop_path","alt","title","movieImage"],"sources":["/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/pages/MovieDetail/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './movieList.module.css'; // Import the CSS file\n\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nfunction MovieList({ category, fetchUrl, isOriginals, onClick }) {\n    const [movies, setMovies] = useState([])\n\n    // Fetch movies based on the provided fetchUrl\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n            const data = await response.json();\n            setMovies(data.results);\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n\n    // // Use either the provided `movies` prop or the fetched movies\n    // const moviesToDisplay = movies.length > 0 ? movies : fetchedMovies;\n\n    return (\n        <div className={styles.group}>\n            <h2>{category}</h2>\n            <div className={styles.movieContainer}>\n                {movies.map((movie) => (\n                    <div\n                        key={movie.id}\n                        className={`${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`}\n                        onClick={() => onClick(movie, movies)}  // Pass the movie click event to parent\n                    >\n                        {/* Conditional rendering: show poster for Netflix Originals, backdrop for other genres */}\n                        <img\n                            src={`https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`}\n                            alt={movie.title}\n                            className={styles.movieImage}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB,CAAC,CAAC;;AAE7C,MAAMC,YAAY,GAAG,8BAA8B;AAEnD,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAQ,CAAC,EAAE;EAC7D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZ,eAAeW,SAASA,CAAA,EAAG;MACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,YAAY,GAAGG,QAAQ,EAAE,CAAC;MAC1D,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,SAAS,CAACI,IAAI,CAACE,OAAO,CAAC;IAC3B;IACAL,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAGd;EACA;;EAEA,oBACIP,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAEhB,MAAM,CAACiB,KAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB1B,KAAA,CAAAkB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKpB,QAAa,CAAC,eACnBN,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAEhB,MAAM,CAACwB,cAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjChB,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBACd7B,KAAA,CAAAkB,aAAA;IACIY,GAAG,EAAED,KAAK,CAACE,EAAG;IACdZ,SAAS,EAAE,GAAGhB,MAAM,CAAC6B,SAAS,IAAIxB,WAAW,GAAGL,MAAM,CAAC8B,gBAAgB,GAAG9B,MAAM,CAAC+B,WAAW,EAAG;IAC/FzB,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACoB,KAAK,EAAEnB,MAAM,CAAE,CAAE;IAAA;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGxC1B,KAAA,CAAAkB,aAAA;IACIiB,GAAG,EAAE,kCAAkC3B,WAAW,GAAGqB,KAAK,CAACO,WAAW,GAAGP,KAAK,CAACQ,aAAa,EAAG;IAC/FC,GAAG,EAAET,KAAK,CAACU,KAAM;IACjBpB,SAAS,EAAEhB,MAAM,CAACqC,UAAW;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChC,CACA,CACR,CACA,CACJ,CAAC;AAEd;AAEA,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}