{"ast":null,"code":"var _jsxFileName = \"/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/pages/MovieList/Movie.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './movie.module.css';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\n\n// Create component MovieList\nfunction MovieList({\n  category,\n  fetchUrl,\n  isOriginals\n}) {\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate(); // Initialize useNavigate for navigation\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n      const data = await response.json();\n      setMovies(data.results);\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  // Function to handle movie click and navigate to the details page\n  const handleMovieClick = movieId => {\n    navigate(`/movie/${movieId}`, {\n      state: {\n        category\n      }\n    }); // Navigate to the movie details page with movieId and Pass category in state\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, category), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.movieContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    key: movie.id,\n    className: `${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`,\n    onClick: () => handleMovieClick(movie.id) // Navigate on click\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.name,\n    className: styles.movieImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))));\n}\nfunction Movie() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    category: \"\",\n    fetchUrl: requests.fetchNetflixOriginals,\n    isOriginals: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Xu h\\u01B0\\u1EDBng\",\n    fetchUrl: requests.fetchTrending,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"X\\u1EBFp h\\u1EA1ng cao\",\n    fetchUrl: requests.fetchTopRated,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"H\\xE0nh \\u0111\\u1ED9ng\",\n    fetchUrl: requests.fetchActionMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"H\\xE0i\",\n    fetchUrl: requests.fetchComedyMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Kinh d\\u1ECB\",\n    fetchUrl: requests.fetchHorrorMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"L\\xE3ng m\\u1EA1n\",\n    fetchUrl: requests.fetchRomanceMovies,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"T\\xE0i li\\u1EC7u\",\n    fetchUrl: requests.fetchDocumentaries,\n    isOriginals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Movie;","map":{"version":3,"names":["React","useState","useEffect","styles","useNavigate","API_BASE_URL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","MovieList","category","fetchUrl","isOriginals","movies","setMovies","navigate","fetchData","response","fetch","data","json","results","handleMovieClick","movieId","state","createElement","className","group","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","movieContainer","map","movie","key","id","movieItem","netflixOriginals","otherGenres","onClick","src","poster_path","backdrop_path","alt","name","movieImage","Movie"],"sources":["/Users/nus/Documents/Study/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/pages/MovieList/Movie.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport styles from './movie.module.css';\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n};\n\n// Create component MovieList\nfunction MovieList({ category, fetchUrl, isOriginals }) {\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();  // Initialize useNavigate for navigation\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n      const data = await response.json();\n      setMovies(data.results);\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  // Function to handle movie click and navigate to the details page\n  const handleMovieClick = (movieId) => {\n    navigate(`/movie/${movieId}`, { state: { category } });  // Navigate to the movie details page with movieId and Pass category in state\n  };\n\n  return (\n    <div className={styles.group}>\n      <h2>{category}</h2>\n      <div className={styles.movieContainer}>\n        {movies.map((movie) => (\n          <div\n            key={movie.id}\n            className={`${styles.movieItem} ${isOriginals ? styles.netflixOriginals : styles.otherGenres}`}\n            onClick={() => handleMovieClick(movie.id)}  // Navigate on click\n          >\n            {/* Conditional rendering: show poster for Netflix Originals, backdrop for other genres */}\n            <img\n              src={`https://image.tmdb.org/t/p/w500${isOriginals ? movie.poster_path : movie.backdrop_path}`}\n              alt={movie.name}\n              className={styles.movieImage}\n            />\n\n          </div>\n        ))}\n      </div>\n    </div >\n  );\n}\n\nfunction Movie() {\n  return (\n    <div>\n      <MovieList category=\"\" fetchUrl={requests.fetchNetflixOriginals} isOriginals={true} />\n      <MovieList category=\"Xu hướng\" fetchUrl={requests.fetchTrending} isOriginals={false} />\n      <MovieList category=\"Xếp hạng cao\" fetchUrl={requests.fetchTopRated} isOriginals={false} />\n      <MovieList category=\"Hành động\" fetchUrl={requests.fetchActionMovies} isOriginals={false} />\n      <MovieList category=\"Hài\" fetchUrl={requests.fetchComedyMovies} isOriginals={false} />\n      <MovieList category=\"Kinh dị\" fetchUrl={requests.fetchHorrorMovies} isOriginals={false} />\n      <MovieList category=\"Lãng mạn\" fetchUrl={requests.fetchRomanceMovies} isOriginals={false} />\n      <MovieList category=\"Tài liệu\" fetchUrl={requests.fetchDocumentaries} isOriginals={false} />\n    </div>\n  );\n}\n\nexport default Movie;\n\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;;AAEjD;AACA,MAAMC,YAAY,GAAG,8BAA8B;;AAEnD;AACA,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,QAAQ,GAAG;EACfC,aAAa,EAAE,8BAA8BF,OAAO,iBAAiB;EACrEG,qBAAqB,EAAE,wBAAwBH,OAAO,mBAAmB;EACzEI,aAAa,EAAE,4BAA4BJ,OAAO,iBAAiB;EACnEK,iBAAiB,EAAE,2BAA2BL,OAAO,iBAAiB;EACtEM,iBAAiB,EAAE,2BAA2BN,OAAO,iBAAiB;EACtEO,iBAAiB,EAAE,2BAA2BP,OAAO,iBAAiB;EACtEQ,kBAAkB,EAAE,2BAA2BR,OAAO,oBAAoB;EAC1ES,kBAAkB,EAAE,2BAA2BT,OAAO,iBAAiB;EACvEU,WAAW,EAAE,yBAAyBV,OAAO;AAC/C,CAAC;;AAED;AACA,SAASW,SAASA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EACtD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMsB,QAAQ,GAAGnB,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjCF,SAAS,CAAC,MAAM;IACd,eAAesB,SAASA,CAAA,EAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGrB,YAAY,GAAGc,QAAQ,EAAE,CAAC;MAC1D,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,SAAS,CAACK,IAAI,CAACE,OAAO,CAAC;IACzB;IAEAL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMW,gBAAgB,GAAIC,OAAO,IAAK;IACpCR,QAAQ,CAAC,UAAUQ,OAAO,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAEd;MAAS;IAAE,CAAC,CAAC,CAAC,CAAE;EAC3D,CAAC;EAED,oBACElB,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAE/B,MAAM,CAACgC,KAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BzC,KAAA,CAAAiC,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvB,QAAa,CAAC,eACnBlB,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAE/B,MAAM,CAACuC,cAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnCpB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBAChB5C,KAAA,CAAAiC,aAAA;IACEY,GAAG,EAAED,KAAK,CAACE,EAAG;IACdZ,SAAS,EAAE,GAAG/B,MAAM,CAAC4C,SAAS,IAAI3B,WAAW,GAAGjB,MAAM,CAAC6C,gBAAgB,GAAG7C,MAAM,CAAC8C,WAAW,EAAG;IAC/FC,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACc,KAAK,CAACE,EAAE,CAAE,CAAE;IAAA;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAG5CzC,KAAA,CAAAiC,aAAA;IACEkB,GAAG,EAAE,kCAAkC/B,WAAW,GAAGwB,KAAK,CAACQ,WAAW,GAAGR,KAAK,CAACS,aAAa,EAAG;IAC/FC,GAAG,EAAEV,KAAK,CAACW,IAAK;IAChBrB,SAAS,EAAE/B,MAAM,CAACqD,UAAW;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAEE,CACN,CACE,CACD,CAAC;AAEX;AAEA,SAASgB,KAAKA,CAAA,EAAG;EACf,oBACEzD,KAAA,CAAAiC,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,EAAE;IAACC,QAAQ,EAAEZ,QAAQ,CAACE,qBAAsB;IAACW,WAAW,EAAE,IAAK;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACtFzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,oBAAU;IAACC,QAAQ,EAAEZ,QAAQ,CAACC,aAAc;IAACY,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvFzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,wBAAc;IAACC,QAAQ,EAAEZ,QAAQ,CAACG,aAAc;IAACU,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC3FzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,wBAAW;IAACC,QAAQ,EAAEZ,QAAQ,CAACI,iBAAkB;IAACS,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC5FzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,QAAK;IAACC,QAAQ,EAAEZ,QAAQ,CAACK,iBAAkB;IAACQ,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACtFzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,cAAS;IAACC,QAAQ,EAAEZ,QAAQ,CAACM,iBAAkB;IAACO,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC1FzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,kBAAU;IAACC,QAAQ,EAAEZ,QAAQ,CAACO,kBAAmB;IAACM,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC5FzC,KAAA,CAAAiC,aAAA,CAAChB,SAAS;IAACC,QAAQ,EAAC,kBAAU;IAACC,QAAQ,EAAEZ,QAAQ,CAACQ,kBAAmB;IAACK,WAAW,EAAE,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACxF,CAAC;AAEV;AAEA,eAAegB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}