{"ast":null,"code":"var _jsxFileName = \"/Users/v.pham/Documents/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/Movie.jsx\";\n// API Key\n// a090b75e1744dd94d481ba67ad26903e\n\n// API Read Access Token\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDkwYjc1ZTE3NDRkZDk0ZDQ4MWJhNjdhZDI2OTAzZSIsIm5iZiI6MTcyODMxNzQxNy40MDUxOTEsInN1YiI6IjY3MDQwNTk3M2FmYzkxYTVmMTEzYTM3NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZSwPF56KWx_fo1dbaMRBXZqrR-hFstpP4L2owhxKZng\n\nimport React, { useState, useEffect } from 'react';\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\nfunction MovieList({\n  category,\n  fetchUrl\n}) {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n      const data = await response.json();\n      setMovies(data.results);\n    }\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Trending Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n      gap: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    key: movie.id,\n    style: {\n      border: '1px solid #ddd',\n      padding: '10px',\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n    alt: movie.title || movie.name,\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, movie.title || movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }\n  }, \"Release Date:\"), \" \", movie.release_date), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }, \"Rating:\"), \" \", movie.vote_average, \" / 10\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, movie.overview)))));\n}\nfunction Movie() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Trending\",\n    fetchUrl: requests.fetchTrending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Top Rated\",\n    fetchUrl: requests.fetchTopRated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Action Movies\",\n    fetchUrl: requests.fetchActionMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Comedy Movies\",\n    fetchUrl: requests.fetchComedyMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Horror Movies\",\n    fetchUrl: requests.fetchHorrorMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Romance Movies\",\n    fetchUrl: requests.fetchRomanceMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    category: \"Documentaries\",\n    fetchUrl: requests.fetchDocumentaries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Movie;","map":{"version":3,"names":["React","useState","useEffect","API_BASE_URL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","MovieList","category","fetchUrl","movies","setMovies","fetchData","response","fetch","data","json","results","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","map","movie","key","id","border","padding","borderRadius","src","poster_path","alt","title","name","width","release_date","vote_average","overview","Movie"],"sources":["/Users/v.pham/Documents/NU_Funix/React/ASM/Assignment 02 (Starter Code)/src/Movie.jsx"],"sourcesContent":["// API Key\n// a090b75e1744dd94d481ba67ad26903e\n\n// API Read Access Token\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMDkwYjc1ZTE3NDRkZDk0ZDQ4MWJhNjdhZDI2OTAzZSIsIm5iZiI6MTcyODMxNzQxNy40MDUxOTEsInN1YiI6IjY3MDQwNTk3M2FmYzkxYTVmMTEzYTM3NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZSwPF56KWx_fo1dbaMRBXZqrR-hFstpP4L2owhxKZng\n\n\nimport React, { useState, useEffect } from 'react';\n\n// Base URL for all API requests\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\n// API key\nconst API_KEY = 'a090b75e1744dd94d481ba67ad26903e';\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n};\n\nfunction MovieList({ category, fetchUrl }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`${API_BASE_URL}${fetchUrl}`);\n      const data = await response.json();\n      setMovies(data.results);\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div>\n      <h2>Trending Movies</h2>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '20px' }}>\n        {movies.map((movie) => (\n          <div key={movie.id} style={{ border: '1px solid #ddd', padding: '10px', borderRadius: '10px' }}>\n            {/* Movie Poster */}\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title || movie.name}\n              style={{ width: '100%', borderRadius: '5px' }}\n            />\n            {/* Movie Title */}\n            <h3>{movie.title || movie.name}</h3>\n            {/* Release Date */}\n            <p><strong>Release Date:</strong> {movie.release_date}</p>\n            {/* Vote Average */}\n            <p><strong>Rating:</strong> {movie.vote_average} / 10</p>\n            {/* Movie Overview */}\n            <p>{movie.overview}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Movie() {\n  return (\n    <div>\n      <MovieList category=\"Trending\" fetchUrl={requests.fetchTrending} />\n      <MovieList category=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <MovieList category=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <MovieList category=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <MovieList category=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <MovieList category=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <MovieList category=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default Movie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}